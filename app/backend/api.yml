openapi: 3.0.0

info:
  title: CHEF Backend API
  version: 1.0.0

tags:
  - name: Fridge
  - name: Recipe

servers:
  - url: http://localhost/api/v1

paths:
  /recipe/{id}:
    get:
      tags: [Recipe]
      summary: Get a recipe by ID
      parameters:
        - in: path
          name: id
          schema: { type: integer }
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Recipe' }

  # TODO: Authentication
  /fridge/{fridgeId}/ingredient/{ingredientId}/amount:
    get:
      tags: [Fridge]
      summary: Get the amount of an ingredient in the fridge
      parameters:
        - $ref: "#/components/parameters/fridgeId"
        - $ref: "#/components/parameters/ingredientId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { type: number, example: 100 }
    post:
      tags: [Fridge]
      summary: Update the amount of an ingredient in the fridge
      description:
        Set the amount of `ingredientId` in `fridgeId` to `amount`
      parameters:
        - $ref: "#/components/parameters/fridgeId"
        - $ref: "#/components/parameters/ingredientId"
        - in: query
          name: amount
          description: Amount to set the ingredient to
          schema: { type: integer, example: 1 }
          required: true
      responses:
        "204":
          description: No Content


components:
  parameters:
    fridgeId:
      in: path
      name: fridgeId
      schema: { type: integer, example: 1 }
      required: true
    ingredientId:
      in: path
      name: ingredientId
      schema: { type: integer, example: 1 }
      required: true

  schemas:
    Unit:
      enum:
        - none
        - whole
        - ml
        - g
      example: g

    Recipe:
      type: object
      properties:
        id: { type: integer, example: 12345 }
        name: { type: string, example: 'Chicken Pie' }
        directions: { type: string, example: "The great thing about chicken pie is that you don't need to know how to make it, just get some chicken. And put it in a pie."}
        link: { type: string, example: 'example.com' }
        ingredients:
          type: array
          items: { $ref: '#/components/schemas/IngredientEntry' }
      required: [id, name, directions, link, ingredients]
      additionalProperties: false

    Ingredient:
      type: object
      properties:
        id: { type: integer, example: 12345 }
        name: { type: string, example: 'Chicken' }
        preferredUnit: { $ref: '#/components/schemas/Unit' }
      required: [name, id, preferredUnit]
      additionalProperties: false

    IngredientEntry:
      type: object
      properties:
        ingredient: { $ref: '#/components/schemas/Ingredient' }
        amount: { type: number, example: 250 }
        originalLine: { type: string, example: '250g of chicken' }
      required: [ingredient, originalLine]
      additionalProperties: false
