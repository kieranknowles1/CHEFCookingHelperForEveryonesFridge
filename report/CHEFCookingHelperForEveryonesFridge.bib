
@misc{wrap_uk_2020,
	title = {{UK} progress against {Courtauld} 2025 targets and {UN} {Sustainable} {Development} {Goal} 12.3},
	url = {https://wrap.org.uk/sites/default/files/2020-09/UK-progress-against-Courtauld-2025-targets-and-UN-SDG-123.pdf},
	abstract = {This report documents progress against Courtauld 2025 and UN’s Sustainable Development
Goal (SDG) 12.3 food waste prevention targets, and also the Courtauld 2025 greenhouse gas
emissions (GHG) target1. The analysis suggests that the UK is on a trajectory to
achieve national and international food waste prevention targets, assuming rates
of progress between 2007 and 2018 are maintained, and that the strategies
WRAP has developed under Courtauld 2025, delivered through wide-ranging
partnerships and supported by industry are effective. When consumers and
businesses are reached and motivated to act significant reductions are achieved.
Much more action is needed to ensure that most people and organisations are
engaged and making the required changes.
WRAP, food businesses and other partners have delivered large-scale interventions to reduce
food waste across supply chains, and households for more than ten years (since 2007),
supported by UK Governments and enabled by a series of collaborative voluntary
agreements. This contributed to a decrease in post-farm gate total food waste between 2007
and 2015 of around a million tonnes. Whilst being recognised as world-leading2, progress in
reducing household food waste stalled between 2012 and 2015, and only modest reductions
were made in supply chain food waste. Courtauld 2025 was launched in 2016 with a new
collaborative approach to increase the resource efficiency of the food supply chain.
This report shows that food waste in the UK (post-farm gate) amounted to around 9.5 Mt in
2018, almost 480kt lower than in 2015 and almost 1.7 Mt lower than in the SDG12.3
baseline year. Food waste excluding inedible parts amounted to around 6.4 Mt in 2018, or
almost 70\% of the total.},
	author = {{WRAP}},
	month = jan,
	year = {2020},
	file = {WRAP - 2020 - UK progress against Courtauld 2025 targets and UN .pdf:C\:\\Users\\Student\\Zotero\\storage\\Y7MFSMQR\\WRAP - 2020 - UK progress against Courtauld 2025 targets and UN .pdf:application/pdf},
}

@misc{census_families_2022,
	title = {Families and households in the {UK} - {Office} for {National} {Statistics}},
	url = {https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/families/bulletins/familiesandhouseholds/2022},
	urldate = {2023-09-26},
	author = {{Census}},
	year = {2022},
	file = {Families and households in the UK - Office for National Statistics:C\:\\Users\\Student\\Zotero\\storage\\29J8IK3E\\2022.html:text/html},
}

@misc{wrap_food_2020,
	title = {Food surplus and waste in the {UK} – key facts},
	url = {https://wrap.org.uk/sites/default/files/2020-11/Food-surplus-and-waste-in-the-UK-key-facts-Jan-2020.pdf},
	urldate = {2023-09-26},
	author = {WRAP},
	month = jan,
	year = {2020},
	file = {WRAP - 2020 - Food surplus and waste in the UK – key facts.pdf:C\:\\Users\\Student\\Zotero\\storage\\GEJLN8YD\\WRAP - 2020 - Food surplus and waste in the UK – key facts.pdf:application/pdf},
}

@article{jeswani_extent_2021,
	title = {The extent of food waste generation in the {UK} and its environmental impacts},
	volume = {26},
	issn = {23525509},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S2352550920314202},
	doi = {10.1016/j.spc.2020.12.021},
	language = {en},
	urldate = {2023-09-28},
	journal = {Sustainable Production and Consumption},
	author = {Jeswani, Harish K. and Figueroa-Torres, Gonzalo and Azapagic, Adisa},
	month = apr,
	year = {2021},
	pages = {532--547},
	file = {Jeswani et al. - 2021 - The extent of food waste generation in the UK and .pdf:C\:\\Users\\Student\\Zotero\\storage\\THWZMF9E\\Jeswani et al. - 2021 - The extent of food waste generation in the UK and .pdf:application/pdf},
}

@misc{supercook_supercook_nodate,
	title = {{SuperCook} - {Zero} {Waste} {Recipe} {Generator}},
	url = {https://www.supercook.com/},
	urldate = {2023-09-28},
	author = {{SuperCook}},
	file = {SuperCook - Zero Waste Recipe Generator:C\:\\Users\\Student\\Zotero\\storage\\8UD2DQE5\\www.supercook.com.html:text/html},
}

@misc{myfridgefood_myfridgefood_nodate,
	title = {{MyFridgeFood} - {Home}},
	url = {https://myfridgefood.com/},
	urldate = {2023-09-28},
	author = {{MyFridgeFood}},
	file = {MyFridgeFood - Home:C\:\\Users\\Student\\Zotero\\storage\\9XT5V66C\\myfridgefood.com.html:text/html},
}

@article{francis-devine_rising_2023,
	title = {Rising cost of living in the {UK}},
	url = {https://commonslibrary.parliament.uk/research-briefings/cbp-9428/},
	abstract = {This briefing covers rising prices including food and energy inflation, Government support, and how the cost of living affects households.},
	language = {en-GB},
	urldate = {2023-11-01},
	author = {Francis-Devine, Brigid and Barton, Cassie and Harari, Daniel and Keep, Matthew and Bolton, Paul and Wilson, Wendy},
	month = nov,
	year = {2023},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\BSCJ5HBG\\cbp-9428.html:text/html},
}

@misc{office_for_national_statistics_average_2023,
	title = {Average weekly earnings in {Great} {Britain} - {Office} for {National} {Statistics}},
	url = {https://www.ons.gov.uk/employmentandlabourmarket/peopleinwork/employmentandemployeetypes/bulletins/averageweeklyearningsingreatbritain/september2023},
	urldate = {2023-11-01},
	author = {{Office for National Statistics}},
	month = oct,
	year = {2023},
	file = {Average weekly earnings in Great Britain - Office for National Statistics:C\:\\Users\\Student\\Zotero\\storage\\NXDK7A9Z\\september2023.html:text/html},
}

@misc{docker_docker_2023,
	title = {Docker {Docs}},
	url = {https://docs.docker.com/},
	abstract = {Home page for Docker's documentation},
	language = {en},
	urldate = {2023-11-02},
	journal = {Docker Documentation},
	author = {{Docker}},
	year = {2023},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\F5S9L946\\docs.docker.com.html:text/html},
}

@misc{noauthor_setting_2021,
	title = {Setting up {Docker} + {TypeScript} + {Node} ({Hot} reloading code changes in a running container) 🦄 🚀},
	url = {https://dev.to/dariansampare/setting-up-docker-typescript-node-hot-reloading-code-changes-in-a-running-container-2b2f},
	abstract = {I love TypeScript, and I love Docker. Putting these two together, however, can be a giant pain in th...},
	language = {en},
	urldate = {2023-11-06},
	journal = {DEV Community},
	month = jan,
	year = {2021},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\CNI442ZJ\\setting-up-docker-typescript-node-hot-reloading-code-changes-in-a-running-container-2b2f.html:text/html},
}

@misc{foodnetwork_food_nodate,
	title = {Food {Network} {UK} {\textbar} {British} {Dishes} and {Global} {Recipes}},
	url = {https://foodnetwork.co.uk/},
	urldate = {2023-11-05},
	author = {{Foodnetwork}},
	file = {Food Network UK | British Dishes and Global Recipes:C\:\\Users\\Student\\Zotero\\storage\\D89NPGGZ\\foodnetwork.co.uk.html:text/html},
}

@misc{epicurious_epicurious_2023,
	title = {Epicurious – {Recipes}, {Menu} {Ideas}, {Videos} \& {Cooking} {Tips}},
	url = {https://www.epicurious.com},
	abstract = {Since 1995, Epicurious has been the ultimate food resource for the home cook, with daily kitchen tips, fun cooking videos, and, oh yeah, over 33,000 recipes.},
	language = {en},
	urldate = {2023-11-05},
	journal = {Epicurious},
	author = {{Epicurious}},
	month = nov,
	year = {2023},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\HKUA456S\\www.epicurious.com.html:text/html},
}

@misc{allrecipes_allrecipes_nodate,
	title = {Allrecipes {\textbar} {Recipes}, {How}-{Tos}, {Videos} and {More}},
	url = {https://www.allrecipes.com/},
	abstract = {Everyday recipes with ratings and reviews by home cooks like you. Find easy dinner ideas, healthy recipes, plus helpful cooking tips and techniques.},
	language = {en},
	urldate = {2023-11-05},
	journal = {Allrecipes},
	author = {{AllRecipes}},
	note = {Section: Allrecipes},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\GVTMHVZB\\www.allrecipes.com.html:text/html},
}

@misc{lee_recipe_2017,
	title = {Recipe box},
	url = {https://eightportions.com/datasets/Recipes/},
	abstract = {Online recipes typically consist of several components: a recipe title, a list of ingredients and measurements, instructions for preparation, and a picture of the resulting dish. I haven’t been able to find any open datasets containing each of these elements, so I scraped {\textasciitilde}125,000 recipes from various food websites1. Roughly 70,000 of these recipes have images associated with them. Comments and ratings data are not included. ↩},
	language = {en},
	urldate = {2023-11-05},
	journal = {Eight Portions},
	author = {Lee, Ryan},
	month = mar,
	year = {2017},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\2VD6HKRJ\\Recipes.html:text/html},
}

@article{bag_efficient_2019,
	title = {An efficient recommendation generation using relevant {Jaccard} similarity},
	volume = {483},
	issn = {0020-0255},
	url = {https://www.sciencedirect.com/science/article/pii/S0020025519300325},
	doi = {10.1016/j.ins.2019.01.023},
	abstract = {In the literature, various collaborative filtering approaches have been developed to perform an efficient recommendation on top of reducing the search cost of the customers. The recommender system methods are concentrated on improving the accuracy and to achieve that goal they focused on formulating complex similarity approaches and neglect the computation time in their model. Furthermore, in order to compute the similarity metric, most of traditional similarity measures have only considered co-rated items and overlooked the total rating vector of the user or item. However, considering only co-rated items to measure similarity metrics in recommender system is an insignificant approach to identifying appropriate nearest neighbors in relatively sparse datasets. Therefore, in this research, two new simple but effective similarity models have been developed by considering all rating vectors of users to classify relevant neighborhoods and generate recommendations in a lower computation time. Moreover, MovieLens, a well-known dataset used in recommender system domain, is involved here to validate the performance of the proposed model. It seems that the proposed relevant Jaccard similarity perform more accurately and effectively to generate well recommendation than other traditional similarity models.},
	urldate = {2023-12-14},
	journal = {Information Sciences},
	author = {Bag, Sujoy and Kumar, Sri Krishna and Tiwari, Manoj Kumar},
	month = may,
	year = {2019},
	keywords = {Machine learning, Accuracy, Collaborative filtering, Data mining, Recommender system, Relevant Jaccard similarity},
	pages = {53--64},
	file = {ScienceDirect Snapshot:C\:\\Users\\Student\\Zotero\\storage\\DLUXANYW\\S0020025519300325.html:text/html},
}

@inproceedings{wu_extracting_2017,
	title = {Extracting {Topics} {Based} on {Word2Vec} and {Improved} {Jaccard} {Similarity} {Coefficient}},
	url = {https://ieeexplore.ieee.org/abstract/document/8005506},
	doi = {10.1109/DSC.2017.70},
	abstract = {To extract key topics from news articles, this paper researches into a new method to discover an efficient way to construct text vectors and improve the efficiency and accuracy of document clustering based on Word2Vec model. This paper proposes a novel algorithm, which combines Jaccard similarity coefficient and inverse dimension frequency to calculate the importance degree between each dimension in text vector and the corresponding document. Text vectors is constructed based on the importance degree and improve the accuracy of text cluster and key topics extraction. The algorithm is also implemented on MapReduce and the efficiency is improved.},
	urldate = {2023-12-14},
	booktitle = {2017 {IEEE} {Second} {International} {Conference} on {Data} {Science} in {Cyberspace} ({DSC})},
	author = {Wu, Chunzi and Wang, Bai},
	month = jun,
	year = {2017},
	pages = {389--397},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Student\\Zotero\\storage\\VLDVRPEW\\8005506.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\EHHW75KA\\Wu and Wang - 2017 - Extracting Topics Based on Word2Vec and Improved J.pdf:application/pdf},
}

@misc{cer_universal_2018,
	title = {Universal {Sentence} {Encoder}},
	url = {http://arxiv.org/abs/1803.11175},
	abstract = {We present models for encoding sentences into embedding vectors that speciﬁcally target transfer learning to other NLP tasks. The models are efﬁcient and result in accurate performance on diverse transfer tasks. Two variants of the encoding models allow for trade-offs between accuracy and compute resources. For both variants, we investigate and report the relationship between model complexity, resource consumption, the availability of transfer task training data, and task performance. Comparisons are made with baselines that use word level transfer learning via pretrained word embeddings as well as baselines do not use any transfer learning. We ﬁnd that transfer learning using sentence embeddings tends to outperform word level transfer. With transfer learning via sentence embeddings, we observe surprisingly good performance with minimal amounts of supervised training data for a transfer task. We obtain encouraging results on Word Embedding Association Tests (WEAT) targeted at detecting model bias. Our pre-trained sentence encoding models are made freely available for download and on TF Hub.},
	language = {en},
	urldate = {2023-12-20},
	publisher = {arXiv},
	author = {Cer, Daniel and Yang, Yinfei and Kong, Sheng-yi and Hua, Nan and Limtiaco, Nicole and John, Rhomni St and Constant, Noah and Guajardo-Cespedes, Mario and Yuan, Steve and Tar, Chris and Sung, Yun-Hsuan and Strope, Brian and Kurzweil, Ray},
	month = apr,
	year = {2018},
	note = {arXiv:1803.11175 [cs]},
	keywords = {Computer Science - Computation and Language},
	annote = {Comment: 7 pages; fixed module URL in Listing 1},
	file = {Cer et al. - 2018 - Universal Sentence Encoder.pdf:C\:\\Users\\Student\\Zotero\\storage\\35KNT6MX\\1803.11175.pdf:application/pdf},
}

@misc{noauthor_ladjssupertest_2024,
	title = {ladjs/supertest},
	copyright = {MIT},
	url = {https://github.com/ladjs/supertest},
	abstract = {🕷 Super-agent driven library for testing node.js HTTP servers using a fluent API.   Maintained for @forwardemail, @ladjs, @spamscanner, @breejs, @cabinjs, and @lassjs.},
	urldate = {2024-01-03},
	publisher = {Lad - Node.js Full-Stack Modern Framework (2023)},
	month = jan,
	year = {2024},
	note = {original-date: 2012-06-27T20:56:12Z},
	keywords = {assertions, node, superagent, supertest},
}

@misc{noauthor_istanbul_nodate,
	title = {Istanbul, a {JavaScript} test coverage tool.},
	url = {http://istanbul.js.org/},
	abstract = {Istanbul instruments your ES5 and ES2015+ JavaScript code with line counters, so that you can track how well your unit-tests exercise your…},
	language = {en},
	urldate = {2023-12-31},
	journal = {istanbuljs-website},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\PIT9ACXC\\istanbul.js.org.html:text/html},
}

@misc{noauthor_mocha_nodate,
	title = {Mocha - the fun, simple, flexible {JavaScript} test framework},
	url = {https://mochajs.org/},
	urldate = {2023-12-31},
	file = {Mocha - the fun, simple, flexible JavaScript test framework:C\:\\Users\\Student\\Zotero\\storage\\XZG2IXU4\\mochajs.org.html:text/html},
}

@misc{vuillamy_megalinter_nodate,
	title = {{MegaLinter}},
	url = {https://megalinter.io},
	abstract = {🦙 MegaLinter analyzes 48 languages, 22 formats, 19 tooling formats, excessive copy-pastes and spelling mistakes in your repository sources with a GitHub Action, other CI tools or locally.},
	language = {en},
	urldate = {2023-12-30},
	journal = {MegaLinter},
	author = {Vuillamy, Nicolas},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\3F9RFHYS\\latest.html:text/html},
}

@inproceedings{gao_type_2017,
	title = {To {Type} or {Not} to {Type}: {Quantifying} {Detectable} {Bugs} in {JavaScript}},
	shorttitle = {To {Type} or {Not} to {Type}},
	url = {https://ieeexplore.ieee.org/abstract/document/7985711?casa_token=ti-oZkVmQw4AAAAA:hCyHQXo9L96QxwMGcQ0p94nkVlC1K5OvZmvtxClvD7q_OEDZwkedsRaIIR1BTMkHvu95CdKJUQ},
	doi = {10.1109/ICSE.2017.75},
	abstract = {JavaScript is growing explosively and is now used in large mature projects even outside the web domain. JavaScript is also a dynamically typed language for which static type systems, notably Facebook's Flow and Microsoft's TypeScript, have been written. What benefits do these static type systems provide? Leveraging JavaScript project histories, we select a fixed bug and check out the code just prior to the fix. We manually add type annotations to the buggy code and test whether Flow and TypeScript report an error on the buggy code, thereby possibly prompting a developer to fix the bug before its public release. We then report the proportion of bugs on which these type systems reported an error. Evaluating static type systems against public bugs, which have survived testing and review, is conservative: it understates their effectiveness at detecting bugs during private development, not to mention their other benefits such as facilitating code search/completion and serving as documentation. Despite this uneven playing field, our central finding is that both static type systems find an important percentage of public bugs: both Flow 0.30 and TypeScript 2.0 successfully detect 15\%!.},
	urldate = {2024-02-06},
	booktitle = {2017 {IEEE}/{ACM} 39th {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {Gao, Zheng and Bird, Christian and Barr, Earl T.},
	month = may,
	year = {2017},
	note = {ISSN: 1558-1225},
	keywords = {Computer bugs, Documentation, Facebook, Flow, History, JavaScript, Measurement uncertainty, mining software repositories, Software, static type systems, Surgery, TypeScript},
	pages = {758--769},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Student\\Zotero\\storage\\G3JCAI9J\\7985711.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\NB9IX98B\\Gao et al. - 2017 - To Type or Not to Type Quantifying Detectable Bug.pdf:application/pdf},
}

@misc{smartbear_swagger_2024,
	title = {Swagger {UI}},
	url = {https://swagger.io/tools/swagger-ui/},
	urldate = {2024-01-29},
	author = {{Smartbear}},
	year = {2024},
	file = {REST API Documentation Tool | Swagger UI:C\:\\Users\\Student\\Zotero\\storage\\VMBEYXKX\\swagger-ui.html:text/html},
}

@book{kreibich_using_2010,
	title = {Using {SQLite}},
	isbn = {978-0-596-52118-9},
	abstract = {Application developers, take note: databases aren't just for the IS group any more. You can build database-backed applications for the desktop, Web, embedded systems, or operating systems without linking to heavy-duty client-server databases such as Oracle and MySQL. This book shows you how to use SQLite, a small and lightweight relational database engine that you can build directly into your application. With SQLite, you'll discover how to develop a database-backed application that remains manageable in size and complexity. This book guides you every step of the way. You'll get a crash course in data modeling, become familiar with SQLite's dialect of the SQL database language, and much more. Learn how to maintain localized storage in a single file that requires no configuration Build your own SQLite library or use a precompiled distribution in your application Get a primer on SQL, and learn how to use several language functions and extensions Work with SQLite using a scripting language or a C-based language such as C\# or Objective-C Understand the basics of database design, and learn how to transfer what you already know to SQLite Take advantage of virtual tables and modules  "Complex SQL concepts explained clearly." --D. Richard Hipp, creator of SQLite},
	language = {en},
	publisher = {"O'Reilly Media, Inc."},
	author = {Kreibich, Jay},
	month = aug,
	year = {2010},
	note = {Google-Books-ID: HFIM47wp0X0C},
	keywords = {Computers / Business \& Productivity Software / Databases, Computers / Computer Science, Computers / Database Administration \& Management, Computers / Desktop Applications / General, Computers / General, Computers / Languages / SQL, Computers / Programming / Open Source},
}

@inproceedings{gil_whiteoak_2008,
	address = {New York, NY, USA},
	series = {{OOPSLA} '08},
	title = {Whiteoak: introducing structural typing into java},
	isbn = {978-1-60558-215-3},
	shorttitle = {Whiteoak},
	url = {https://dl.acm.org/doi/10.1145/1449764.1449771},
	doi = {10.1145/1449764.1449771},
	abstract = {This paper presents WHITEOAK: a JAVA extension that introduces structural type equivalence and subtyping into the language. We argue that structural subtyping addresses common software design problems, and promotes the development of loosely coupled modules without compromising type safety. We discuss language design issues, including subtyping in face of self-referencing structural types, compile-time operators for computing the new types from existing ones, and the semantics of constructors and non-abstract methods in structural types. We describe implementation techniques, including the compile-time and run-time challenges that we faced (in particular, preserving the identity of objects). Measurement indicate that the performance of our implementation of structural dispatching is comparable to that of the JVM's standard invocation mechanisms.},
	urldate = {2024-02-08},
	booktitle = {Proceedings of the 23rd {ACM} {SIGPLAN} conference on {Object}-oriented programming systems languages and applications},
	publisher = {Association for Computing Machinery},
	author = {Gil, Joseph and Maman, Itay},
	month = oct,
	year = {2008},
	keywords = {abstraction, java, structural subtyping},
	pages = {73--90},
	file = {Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\QDUU52JS\\Gil and Maman - 2008 - Whiteoak introducing structural typing into java.pdf:application/pdf},
}

@inproceedings{bien_recipenlg_2020,
	address = {Dublin, Ireland},
	title = {{RecipeNLG}: {A} {Cooking} {Recipes} {Dataset} for {Semi}-{Structured} {Text} {Generation}},
	shorttitle = {{RecipeNLG}},
	url = {https://aclanthology.org/2020.inlg-1.4},
	doi = {10.18653/v1/2020.inlg-1.4},
	abstract = {Semi-structured text generation is a non-trivial problem. Although last years have brought lots of improvements in natural language generation, thanks to the development of neural models trained on large scale datasets, these approaches still struggle with producing structured, context- and commonsense-aware texts. Moreover, it is not clear how to evaluate the quality of generated texts. To address these problems, we introduce RecipeNLG – a novel dataset of cooking recipes. We discuss the data collection process and the relation between the semi-structured texts and cooking recipes. We use the dataset to approach the problem of generating recipes. Finally, we make use of multiple metrics to evaluate the generated recipes.},
	language = {en},
	urldate = {2024-02-08},
	booktitle = {Proceedings of the 13th {International} {Conference} on {Natural} {Language} {Generation}},
	publisher = {Association for Computational Linguistics},
	author = {Bień, Michał and Gilski, Michał and Maciejewska, Martyna and Taisner, Wojciech and Wisniewski, Dawid and Lawrynowicz, Agnieszka},
	year = {2020},
	pages = {22--28},
	file = {Bień et al. - 2020 - RecipeNLG A Cooking Recipes Dataset for Semi-Stru.pdf:C\:\\Users\\Student\\Zotero\\storage\\KYFIFJVL\\2020.inlg-1.4.pdf:application/pdf},
}
