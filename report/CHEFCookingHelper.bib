
@misc{wrap_uk_2020,
	title = {{UK} progress against {Courtauld} 2025 targets and {UN} {Sustainable} {Development} {Goal} 12.3},
	url = {https://wrap.org.uk/sites/default/files/2020-09/UK-progress-against-Courtauld-2025-targets-and-UN-SDG-123.pdf},
	abstract = {This report documents progress against Courtauld 2025 and UN’s Sustainable Development
Goal (SDG) 12.3 food waste prevention targets, and also the Courtauld 2025 greenhouse gas
emissions (GHG) target1. The analysis suggests that the UK is on a trajectory to
achieve national and international food waste prevention targets, assuming rates
of progress between 2007 and 2018 are maintained, and that the strategies
WRAP has developed under Courtauld 2025, delivered through wide-ranging
partnerships and supported by industry are effective. When consumers and
businesses are reached and motivated to act significant reductions are achieved.
Much more action is needed to ensure that most people and organisations are
engaged and making the required changes.
WRAP, food businesses and other partners have delivered large-scale interventions to reduce
food waste across supply chains, and households for more than ten years (since 2007),
supported by UK Governments and enabled by a series of collaborative voluntary
agreements. This contributed to a decrease in post-farm gate total food waste between 2007
and 2015 of around a million tonnes. Whilst being recognised as world-leading2, progress in
reducing household food waste stalled between 2012 and 2015, and only modest reductions
were made in supply chain food waste. Courtauld 2025 was launched in 2016 with a new
collaborative approach to increase the resource efficiency of the food supply chain.
This report shows that food waste in the UK (post-farm gate) amounted to around 9.5 Mt in
2018, almost 480kt lower than in 2015 and almost 1.7 Mt lower than in the SDG12.3
baseline year. Food waste excluding inedible parts amounted to around 6.4 Mt in 2018, or
almost 70\% of the total.},
	author = {{WRAP}},
	month = jan,
	year = {2020},
	file = {WRAP - 2020 - UK progress against Courtauld 2025 targets and UN .pdf:C\:\\Users\\Student\\Zotero\\storage\\Y7MFSMQR\\WRAP - 2020 - UK progress against Courtauld 2025 targets and UN .pdf:application/pdf},
}

@misc{census_families_2022,
	title = {Families and households in the {UK} - {Office} for {National} {Statistics}},
	url = {https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/families/bulletins/familiesandhouseholds/2022},
	urldate = {2023-09-26},
	author = {{Census}},
	year = {2022},
	file = {Families and households in the UK - Office for National Statistics:C\:\\Users\\Student\\Zotero\\storage\\29J8IK3E\\2022.html:text/html},
}

@misc{wrap_food_2020,
	title = {Food surplus and waste in the {UK} – key facts},
	url = {https://wrap.org.uk/sites/default/files/2020-11/Food-surplus-and-waste-in-the-UK-key-facts-Jan-2020.pdf},
	urldate = {2023-09-26},
	author = {WRAP},
	month = jan,
	year = {2020},
	file = {WRAP - 2020 - Food surplus and waste in the UK – key facts.pdf:C\:\\Users\\Student\\Zotero\\storage\\GEJLN8YD\\WRAP - 2020 - Food surplus and waste in the UK – key facts.pdf:application/pdf},
}

@article{jeswani_extent_2021,
	title = {The extent of food waste generation in the {UK} and its environmental impacts},
	volume = {26},
	issn = {23525509},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S2352550920314202},
	doi = {10.1016/j.spc.2020.12.021},
	language = {en},
	urldate = {2023-09-28},
	journal = {Sustainable Production and Consumption},
	author = {Jeswani, Harish K. and Figueroa-Torres, Gonzalo and Azapagic, Adisa},
	month = apr,
	year = {2021},
	pages = {532--547},
	file = {Jeswani et al. - 2021 - The extent of food waste generation in the UK and .pdf:C\:\\Users\\Student\\Zotero\\storage\\THWZMF9E\\Jeswani et al. - 2021 - The extent of food waste generation in the UK and .pdf:application/pdf},
}

@misc{supercook_supercook_nodate,
	title = {{SuperCook} - {Zero} {Waste} {Recipe} {Generator}},
	url = {https://www.supercook.com/},
	urldate = {2023-09-28},
	author = {{SuperCook}},
	file = {SuperCook - Zero Waste Recipe Generator:C\:\\Users\\Student\\Zotero\\storage\\8UD2DQE5\\www.supercook.com.html:text/html},
}

@misc{myfridgefood_myfridgefood_nodate,
	title = {{MyFridgeFood} - {Home}},
	url = {https://myfridgefood.com/},
	urldate = {2023-09-28},
	author = {{MyFridgeFood}},
	file = {MyFridgeFood - Home:C\:\\Users\\Student\\Zotero\\storage\\9XT5V66C\\myfridgefood.com.html:text/html},
}

@article{francis-devine_rising_2023,
	title = {Rising cost of living in the {UK}},
	url = {https://commonslibrary.parliament.uk/research-briefings/cbp-9428/},
	abstract = {This briefing covers rising prices including food and energy inflation, Government support, and how the cost of living affects households.},
	language = {en-GB},
	urldate = {2023-11-01},
	author = {Francis-Devine, Brigid and Barton, Cassie and Harari, Daniel and Keep, Matthew and Bolton, Paul and Wilson, Wendy},
	month = nov,
	year = {2023},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\BSCJ5HBG\\cbp-9428.html:text/html},
}

@misc{office_for_national_statistics_average_2023,
	title = {Average weekly earnings in {Great} {Britain} - {Office} for {National} {Statistics}},
	url = {https://www.ons.gov.uk/employmentandlabourmarket/peopleinwork/employmentandemployeetypes/bulletins/averageweeklyearningsingreatbritain/september2023},
	urldate = {2023-11-01},
	author = {{Office for National Statistics}},
	month = oct,
	year = {2023},
	file = {Average weekly earnings in Great Britain - Office for National Statistics:C\:\\Users\\Student\\Zotero\\storage\\NXDK7A9Z\\september2023.html:text/html},
}

@misc{docker_docker_2023,
	title = {Docker {Docs}},
	url = {https://docs.docker.com/},
	abstract = {Home page for Docker's documentation},
	language = {en},
	urldate = {2023-11-02},
	journal = {Docker Documentation},
	author = {{Docker}},
	year = {2023},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\F5S9L946\\docs.docker.com.html:text/html},
}

@misc{noauthor_setting_2021,
	title = {Setting up {Docker} + {TypeScript} + {Node} ({Hot} reloading code changes in a running container) 🦄 🚀},
	url = {https://dev.to/dariansampare/setting-up-docker-typescript-node-hot-reloading-code-changes-in-a-running-container-2b2f},
	abstract = {I love TypeScript, and I love Docker. Putting these two together, however, can be a giant pain in th...},
	language = {en},
	urldate = {2023-11-06},
	journal = {DEV Community},
	month = jan,
	year = {2021},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\CNI442ZJ\\setting-up-docker-typescript-node-hot-reloading-code-changes-in-a-running-container-2b2f.html:text/html},
}

@misc{foodnetwork_food_nodate,
	title = {Food {Network} {UK} {\textbar} {British} {Dishes} and {Global} {Recipes}},
	url = {https://foodnetwork.co.uk/},
	urldate = {2023-11-05},
	author = {{Foodnetwork}},
	file = {Food Network UK | British Dishes and Global Recipes:C\:\\Users\\Student\\Zotero\\storage\\D89NPGGZ\\foodnetwork.co.uk.html:text/html},
}

@misc{epicurious_epicurious_2023,
	title = {Epicurious – {Recipes}, {Menu} {Ideas}, {Videos} \& {Cooking} {Tips}},
	url = {https://www.epicurious.com},
	abstract = {Since 1995, Epicurious has been the ultimate food resource for the home cook, with daily kitchen tips, fun cooking videos, and, oh yeah, over 33,000 recipes.},
	language = {en},
	urldate = {2023-11-05},
	journal = {Epicurious},
	author = {{Epicurious}},
	month = nov,
	year = {2023},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\HKUA456S\\www.epicurious.com.html:text/html},
}

@misc{allrecipes_allrecipes_nodate,
	title = {Allrecipes {\textbar} {Recipes}, {How}-{Tos}, {Videos} and {More}},
	url = {https://www.allrecipes.com/},
	abstract = {Everyday recipes with ratings and reviews by home cooks like you. Find easy dinner ideas, healthy recipes, plus helpful cooking tips and techniques.},
	language = {en},
	urldate = {2023-11-05},
	journal = {Allrecipes},
	author = {{AllRecipes}},
	note = {Section: Allrecipes},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\GVTMHVZB\\www.allrecipes.com.html:text/html},
}

@misc{lee_recipe_2017,
	title = {Recipe box},
	url = {https://eightportions.com/datasets/Recipes/},
	abstract = {Online recipes typically consist of several components: a recipe title, a list of ingredients and measurements, instructions for preparation, and a picture of the resulting dish. I haven’t been able to find any open datasets containing each of these elements, so I scraped {\textasciitilde}125,000 recipes from various food websites1. Roughly 70,000 of these recipes have images associated with them. Comments and ratings data are not included. ↩},
	language = {en},
	urldate = {2023-11-05},
	journal = {Eight Portions},
	author = {Lee, Ryan},
	month = mar,
	year = {2017},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\2VD6HKRJ\\Recipes.html:text/html},
}

@article{bag_efficient_2019,
	title = {An efficient recommendation generation using relevant {Jaccard} similarity},
	volume = {483},
	issn = {0020-0255},
	url = {https://www.sciencedirect.com/science/article/pii/S0020025519300325},
	doi = {10.1016/j.ins.2019.01.023},
	abstract = {In the literature, various collaborative filtering approaches have been developed to perform an efficient recommendation on top of reducing the search cost of the customers. The recommender system methods are concentrated on improving the accuracy and to achieve that goal they focused on formulating complex similarity approaches and neglect the computation time in their model. Furthermore, in order to compute the similarity metric, most of traditional similarity measures have only considered co-rated items and overlooked the total rating vector of the user or item. However, considering only co-rated items to measure similarity metrics in recommender system is an insignificant approach to identifying appropriate nearest neighbors in relatively sparse datasets. Therefore, in this research, two new simple but effective similarity models have been developed by considering all rating vectors of users to classify relevant neighborhoods and generate recommendations in a lower computation time. Moreover, MovieLens, a well-known dataset used in recommender system domain, is involved here to validate the performance of the proposed model. It seems that the proposed relevant Jaccard similarity perform more accurately and effectively to generate well recommendation than other traditional similarity models.},
	urldate = {2023-12-14},
	journal = {Information Sciences},
	author = {Bag, Sujoy and Kumar, Sri Krishna and Tiwari, Manoj Kumar},
	month = may,
	year = {2019},
	keywords = {Machine learning, Accuracy, Collaborative filtering, Data mining, Recommender system, Relevant Jaccard similarity},
	pages = {53--64},
	file = {ScienceDirect Snapshot:C\:\\Users\\Student\\Zotero\\storage\\DLUXANYW\\S0020025519300325.html:text/html},
}

@inproceedings{wu_extracting_2017,
	title = {Extracting {Topics} {Based} on {Word2Vec} and {Improved} {Jaccard} {Similarity} {Coefficient}},
	url = {https://ieeexplore.ieee.org/abstract/document/8005506},
	doi = {10.1109/DSC.2017.70},
	abstract = {To extract key topics from news articles, this paper researches into a new method to discover an efficient way to construct text vectors and improve the efficiency and accuracy of document clustering based on Word2Vec model. This paper proposes a novel algorithm, which combines Jaccard similarity coefficient and inverse dimension frequency to calculate the importance degree between each dimension in text vector and the corresponding document. Text vectors is constructed based on the importance degree and improve the accuracy of text cluster and key topics extraction. The algorithm is also implemented on MapReduce and the efficiency is improved.},
	urldate = {2023-12-14},
	booktitle = {2017 {IEEE} {Second} {International} {Conference} on {Data} {Science} in {Cyberspace} ({DSC})},
	author = {Wu, Chunzi and Wang, Bai},
	month = jun,
	year = {2017},
	pages = {389--397},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Student\\Zotero\\storage\\VLDVRPEW\\8005506.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\EHHW75KA\\Wu and Wang - 2017 - Extracting Topics Based on Word2Vec and Improved J.pdf:application/pdf},
}

@misc{cer_universal_2018,
	title = {Universal {Sentence} {Encoder}},
	url = {http://arxiv.org/abs/1803.11175},
	abstract = {We present models for encoding sentences into embedding vectors that speciﬁcally target transfer learning to other NLP tasks. The models are efﬁcient and result in accurate performance on diverse transfer tasks. Two variants of the encoding models allow for trade-offs between accuracy and compute resources. For both variants, we investigate and report the relationship between model complexity, resource consumption, the availability of transfer task training data, and task performance. Comparisons are made with baselines that use word level transfer learning via pretrained word embeddings as well as baselines do not use any transfer learning. We ﬁnd that transfer learning using sentence embeddings tends to outperform word level transfer. With transfer learning via sentence embeddings, we observe surprisingly good performance with minimal amounts of supervised training data for a transfer task. We obtain encouraging results on Word Embedding Association Tests (WEAT) targeted at detecting model bias. Our pre-trained sentence encoding models are made freely available for download and on TF Hub.},
	language = {en},
	urldate = {2023-12-20},
	publisher = {arXiv},
	author = {Cer, Daniel and Yang, Yinfei and Kong, Sheng-yi and Hua, Nan and Limtiaco, Nicole and John, Rhomni St and Constant, Noah and Guajardo-Cespedes, Mario and Yuan, Steve and Tar, Chris and Sung, Yun-Hsuan and Strope, Brian and Kurzweil, Ray},
	month = apr,
	year = {2018},
	note = {arXiv:1803.11175 [cs]},
	keywords = {Computer Science - Computation and Language},
	annote = {Comment: 7 pages; fixed module URL in Listing 1},
	file = {Cer et al. - 2018 - Universal Sentence Encoder.pdf:C\:\\Users\\Student\\Zotero\\storage\\35KNT6MX\\1803.11175.pdf:application/pdf},
}

@misc{noauthor_ladjssupertest_2024,
	title = {ladjs/supertest},
	copyright = {MIT},
	url = {https://github.com/ladjs/supertest},
	abstract = {🕷 Super-agent driven library for testing node.js HTTP servers using a fluent API.   Maintained for @forwardemail, @ladjs, @spamscanner, @breejs, @cabinjs, and @lassjs.},
	urldate = {2024-01-03},
	publisher = {Lad - Node.js Full-Stack Modern Framework (2023)},
	month = jan,
	year = {2024},
	note = {original-date: 2012-06-27T20:56:12Z},
	keywords = {assertions, node, superagent, supertest},
}

@misc{noauthor_istanbul_nodate,
	title = {Istanbul, a {JavaScript} test coverage tool.},
	url = {http://istanbul.js.org/},
	abstract = {Istanbul instruments your ES5 and ES2015+ JavaScript code with line counters, so that you can track how well your unit-tests exercise your…},
	language = {en},
	urldate = {2023-12-31},
	journal = {istanbuljs-website},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\PIT9ACXC\\istanbul.js.org.html:text/html},
}

@misc{noauthor_mocha_nodate,
	title = {Mocha - the fun, simple, flexible {JavaScript} test framework},
	url = {https://mochajs.org/},
	urldate = {2023-12-31},
	file = {Mocha - the fun, simple, flexible JavaScript test framework:C\:\\Users\\Student\\Zotero\\storage\\XZG2IXU4\\mochajs.org.html:text/html},
}

@misc{vuillamy_megalinter_nodate,
	title = {{MegaLinter}},
	url = {https://megalinter.io},
	abstract = {🦙 MegaLinter analyzes 48 languages, 22 formats, 19 tooling formats, excessive copy-pastes and spelling mistakes in your repository sources with a GitHub Action, other CI tools or locally.},
	language = {en},
	urldate = {2023-12-30},
	journal = {MegaLinter},
	author = {Vuillamy, Nicolas},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\3F9RFHYS\\latest.html:text/html},
}

@inproceedings{gao_type_2017,
	title = {To {Type} or {Not} to {Type}: {Quantifying} {Detectable} {Bugs} in {JavaScript}},
	shorttitle = {To {Type} or {Not} to {Type}},
	url = {https://ieeexplore.ieee.org/abstract/document/7985711?casa_token=ti-oZkVmQw4AAAAA:hCyHQXo9L96QxwMGcQ0p94nkVlC1K5OvZmvtxClvD7q_OEDZwkedsRaIIR1BTMkHvu95CdKJUQ},
	doi = {10.1109/ICSE.2017.75},
	abstract = {JavaScript is growing explosively and is now used in large mature projects even outside the web domain. JavaScript is also a dynamically typed language for which static type systems, notably Facebook's Flow and Microsoft's TypeScript, have been written. What benefits do these static type systems provide? Leveraging JavaScript project histories, we select a fixed bug and check out the code just prior to the fix. We manually add type annotations to the buggy code and test whether Flow and TypeScript report an error on the buggy code, thereby possibly prompting a developer to fix the bug before its public release. We then report the proportion of bugs on which these type systems reported an error. Evaluating static type systems against public bugs, which have survived testing and review, is conservative: it understates their effectiveness at detecting bugs during private development, not to mention their other benefits such as facilitating code search/completion and serving as documentation. Despite this uneven playing field, our central finding is that both static type systems find an important percentage of public bugs: both Flow 0.30 and TypeScript 2.0 successfully detect 15\%!.},
	urldate = {2024-02-06},
	booktitle = {2017 {IEEE}/{ACM} 39th {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {Gao, Zheng and Bird, Christian and Barr, Earl T.},
	month = may,
	year = {2017},
	note = {ISSN: 1558-1225},
	keywords = {Computer bugs, Documentation, Facebook, Flow, History, JavaScript, Measurement uncertainty, mining software repositories, Software, static type systems, Surgery, TypeScript},
	pages = {758--769},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Student\\Zotero\\storage\\G3JCAI9J\\7985711.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\NB9IX98B\\Gao et al. - 2017 - To Type or Not to Type Quantifying Detectable Bug.pdf:application/pdf},
}

@misc{smartbear_swagger_2024,
	title = {Swagger {UI}},
	url = {https://swagger.io/tools/swagger-ui/},
	urldate = {2024-01-29},
	author = {{Smartbear}},
	year = {2024},
	file = {REST API Documentation Tool | Swagger UI:C\:\\Users\\Student\\Zotero\\storage\\VMBEYXKX\\swagger-ui.html:text/html},
}

@book{kreibich_using_2010,
	title = {Using {SQLite}},
	isbn = {978-0-596-52118-9},
	abstract = {Application developers, take note: databases aren't just for the IS group any more. You can build database-backed applications for the desktop, Web, embedded systems, or operating systems without linking to heavy-duty client-server databases such as Oracle and MySQL. This book shows you how to use SQLite, a small and lightweight relational database engine that you can build directly into your application. With SQLite, you'll discover how to develop a database-backed application that remains manageable in size and complexity. This book guides you every step of the way. You'll get a crash course in data modeling, become familiar with SQLite's dialect of the SQL database language, and much more. Learn how to maintain localized storage in a single file that requires no configuration Build your own SQLite library or use a precompiled distribution in your application Get a primer on SQL, and learn how to use several language functions and extensions Work with SQLite using a scripting language or a C-based language such as C\# or Objective-C Understand the basics of database design, and learn how to transfer what you already know to SQLite Take advantage of virtual tables and modules  "Complex SQL concepts explained clearly." --D. Richard Hipp, creator of SQLite},
	language = {en},
	publisher = {"O'Reilly Media, Inc."},
	author = {Kreibich, Jay},
	month = aug,
	year = {2010},
	note = {Google-Books-ID: HFIM47wp0X0C},
	keywords = {Computers / Business \& Productivity Software / Databases, Computers / Computer Science, Computers / Database Administration \& Management, Computers / Desktop Applications / General, Computers / General, Computers / Languages / SQL, Computers / Programming / Open Source},
}

@inproceedings{gil_whiteoak_2008,
	address = {New York, NY, USA},
	series = {{OOPSLA} '08},
	title = {Whiteoak: introducing structural typing into java},
	isbn = {978-1-60558-215-3},
	shorttitle = {Whiteoak},
	url = {https://dl.acm.org/doi/10.1145/1449764.1449771},
	doi = {10.1145/1449764.1449771},
	abstract = {This paper presents WHITEOAK: a JAVA extension that introduces structural type equivalence and subtyping into the language. We argue that structural subtyping addresses common software design problems, and promotes the development of loosely coupled modules without compromising type safety. We discuss language design issues, including subtyping in face of self-referencing structural types, compile-time operators for computing the new types from existing ones, and the semantics of constructors and non-abstract methods in structural types. We describe implementation techniques, including the compile-time and run-time challenges that we faced (in particular, preserving the identity of objects). Measurement indicate that the performance of our implementation of structural dispatching is comparable to that of the JVM's standard invocation mechanisms.},
	urldate = {2024-02-08},
	booktitle = {Proceedings of the 23rd {ACM} {SIGPLAN} conference on {Object}-oriented programming systems languages and applications},
	publisher = {Association for Computing Machinery},
	author = {Gil, Joseph and Maman, Itay},
	month = oct,
	year = {2008},
	keywords = {abstraction, java, structural subtyping},
	pages = {73--90},
	file = {Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\QDUU52JS\\Gil and Maman - 2008 - Whiteoak introducing structural typing into java.pdf:application/pdf},
}

@inproceedings{bien_recipenlg_2020,
	address = {Dublin, Ireland},
	title = {{RecipeNLG}: {A} {Cooking} {Recipes} {Dataset} for {Semi}-{Structured} {Text} {Generation}},
	shorttitle = {{RecipeNLG}},
	url = {https://aclanthology.org/2020.inlg-1.4},
	doi = {10.18653/v1/2020.inlg-1.4},
	abstract = {Semi-structured text generation is a non-trivial problem. Although last years have brought lots of improvements in natural language generation, thanks to the development of neural models trained on large scale datasets, these approaches still struggle with producing structured, context- and commonsense-aware texts. Moreover, it is not clear how to evaluate the quality of generated texts. To address these problems, we introduce RecipeNLG – a novel dataset of cooking recipes. We discuss the data collection process and the relation between the semi-structured texts and cooking recipes. We use the dataset to approach the problem of generating recipes. Finally, we make use of multiple metrics to evaluate the generated recipes.},
	language = {en},
	urldate = {2024-02-08},
	booktitle = {Proceedings of the 13th {International} {Conference} on {Natural} {Language} {Generation}},
	publisher = {Association for Computational Linguistics},
	author = {Bień, Michał and Gilski, Michał and Maciejewska, Martyna and Taisner, Wojciech and Wisniewski, Dawid and Lawrynowicz, Agnieszka},
	year = {2020},
	pages = {22--28},
	file = {Bień et al. - 2020 - RecipeNLG A Cooking Recipes Dataset for Semi-Stru.pdf:C\:\\Users\\Student\\Zotero\\storage\\KYFIFJVL\\2020.inlg-1.4.pdf:application/pdf},
}

@article{kicherer_what_2018,
	title = {What you use, not what you do: {Automatic} classification and similarity detection of recipes},
	volume = {117},
	issn = {0169-023X},
	shorttitle = {What you use, not what you do},
	url = {https://www.sciencedirect.com/science/article/pii/S0169023X17305402},
	doi = {10.1016/j.datak.2018.04.004},
	abstract = {Social media data is notoriously noisy and unclean. Recipe collections and their manual categorization built by users are no exception. However, a consistent and transparent categorization is vital to users who search for a specific entry. Similarly, curators are faced with the same challenge given a large collection of existing recipes: They first need to understand the data to be able to build a clean system of categories. This paper presents an empirical study using machine learning classifiers (logistic regression and decision trees) for the automatic classification of recipes on the German cooking website Chefkoch.de. The central question we aim at answering is: Which information is necessary to perform well at this task? In particular, we compare features extracted from the free text instructions of the recipe to those taken from the list of ingredients. On a sample of 5000 recipes with 87 classes, our feature analysis shows that a combination of nouns from the textual description of the recipe with ingredient features performs best in the logistic regression model (48\% F1). Nouns alone achieve 45\% F1 and ingredients alone 46\% F1. However, other word classes do not complement the information from nouns. Decision trees constantly underperform the logistic regression, however, lead to an interpretable model. On a bigger training set of 50,000 instances, the best configuration shows an improvement to 57\% highlighting the importance of a sizeable data set. In addition, we report on the use of these feature vectors for similarity search and ranking of recipes and evaluate on the task of (near) duplicate detection. We show that our method can reduce the manual curation with precision@3 = 0.52.},
	urldate = {2024-02-12},
	journal = {Data \& Knowledge Engineering},
	author = {Kicherer, Hanna and Dittrich, Marcel and Grebe, Lukas and Scheible, Christian and Klinger, Roman},
	month = sep,
	year = {2018},
	keywords = {Cooking food, Lassification, Multi-label, Recipe, Similarity search, Text mining},
	pages = {252--263},
	file = {ScienceDirect Snapshot:C\:\\Users\\Student\\Zotero\\storage\\XZ9SX88L\\S0169023X17305402.html:text/html},
}

@inproceedings{freyne_intelligent_2010,
	address = {New York, NY, USA},
	series = {{IUI} '10},
	title = {Intelligent food planning: personalized recipe recommendation},
	isbn = {978-1-60558-515-4},
	shorttitle = {Intelligent food planning},
	url = {https://dl.acm.org/doi/10.1145/1719970.1720021},
	doi = {10.1145/1719970.1720021},
	abstract = {As the obesity epidemic takes hold across the world many medical professionals are referring users to online systems aimed at educating and persuading users to alter their lifestyle. The challenge for many of these systems is to increase initial adoption and sustain participation for sufficient time to have real impact on the life of its users. In this work we present some preliminary investigation into the design of a recipe recommender, aimed at educating and sustaining user participation, which makes tailored recommendations of healthy recipes. We concentrate on the two initial dimensions of food recommendations: data capture and food-recipe relationships and present a study into the suitability of varying recommender algorithms for the recommendation of recipes.},
	urldate = {2024-02-14},
	booktitle = {Proceedings of the 15th international conference on {Intelligent} user interfaces},
	publisher = {Association for Computing Machinery},
	author = {Freyne, Jill and Berkovsky, Shlomo},
	month = feb,
	year = {2010},
	keywords = {collaborative filtering, food, personalization, recipe, recommender systems},
	pages = {321--324},
	file = {Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\ALQ2MGRC\\Freyne and Berkovsky - 2010 - Intelligent food planning personalized recipe rec.pdf:application/pdf},
}

@article{karlsson_performance_2021,
	title = {A {Performance} comparison {Between} {ASP}.{NET} {Core} and {Express}.js for creating {Web} {APIs}},
	language = {en},
	author = {Karlsson, Oliver},
	month = jul,
	year = {2021},
	file = {Karlsson et al. - A Performance comparison Between ASP.NET Core and .pdf:C\:\\Users\\Student\\Zotero\\storage\\XAZGFXBZ\\Karlsson et al. - A Performance comparison Between ASP.NET Core and .pdf:application/pdf},
}

@misc{noauthor_numbermax_safe_integer_2023,
	title = {Number.{MAX}\_SAFE\_INTEGER - {JavaScript} {\textbar} {MDN}},
	url = {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER},
	abstract = {The Number.MAX\_SAFE\_INTEGER static data property represents the maximum safe integer in JavaScript (253 – 1).},
	language = {en-US},
	urldate = {2024-02-22},
	month = feb,
	year = {2023},
	file = {Snapshot:C\:\\Users\\Student\\Zotero\\storage\\DMWWNPAT\\MAX_SAFE_INTEGER.html:text/html},
}

@article{fowler_refactoring_1997,
	title = {Refactoring: {Improving} the {Design} of {Existing} {Code}},
	language = {en},
	author = {Fowler, Martin},
	year = {1997},
	file = {Fowler - Refactoring Improving the Design of Existing Code.pdf:C\:\\Users\\Student\\Zotero\\storage\\FZKA36KV\\Fowler - Refactoring Improving the Design of Existing Code.pdf:application/pdf},
}

@inproceedings{yamashita_code_2012,
	title = {Do code smells reflect important maintainability aspects?},
	url = {https://ieeexplore.ieee.org/abstract/document/6405287},
	doi = {10.1109/ICSM.2012.6405287},
	abstract = {Code smells are manifestations of design flaws that can degrade code maintainability. As such, the existence of code smells seems an ideal indicator for maintainability assessments. However, to achieve comprehensive and accurate evaluations based on code smells, we need to know how well they reflect factors affecting maintainability. After identifying which maintainability factors are reflected by code smells and which not, we can use complementary means to assess the factors that are not addressed by smells. This paper reports on an empirical study that investigates the extent to which code smells reflect factors affecting maintainability that have been identified as important by programmers. We consider two sources for our analysis: (1) expert-based maintainability assessments of four Java systems before they entered a maintenance project, and (2) observations and interviews with professional developers who maintained these systems during 14 working days and implemented a number of change requests.},
	urldate = {2024-02-28},
	booktitle = {2012 28th {IEEE} {International} {Conference} on {Software} {Maintenance} ({ICSM})},
	author = {Yamashita, Aiko and Moonen, Leon},
	month = sep,
	year = {2012},
	note = {ISSN: 1063-6773},
	keywords = {Measurement, code smells, Encoding, Interviews, Java, maintainability evaluation, Maintenance engineering, Software maintenance},
	pages = {306--315},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Student\\Zotero\\storage\\YLEKZ97U\\6405287.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\Y92ZCJ3K\\Yamashita and Moonen - 2012 - Do code smells reflect important maintainability a.pdf:application/pdf},
}

@misc{noauthor_httpsieeexploreieeeorgstampstampjsptparnumber1510177_nodate,
	title = {https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=\&arnumber=1510177},
	url = {https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1510177},
	urldate = {2024-02-28},
	file = {https\://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1510177:C\:\\Users\\Student\\Zotero\\storage\\DKLGVJBU\\stamp.html:text/html},
}

@inproceedings{marinescu_measurement_2005,
	title = {Measurement and quality in object-oriented design},
	url = {https://ieeexplore.ieee.org/document/1510177},
	doi = {10.1109/ICSM.2005.63},
	abstract = {In order to support the maintenance of object-oriented software systems, the quality of their design must be evaluated using adequate quantification means. In spite of the current extensive use of metrics, if used in isolation, metrics are oftentimes too fine grained to quantify comprehensively an investigated aspect of the design. To help the software engineer detect and localize design problems, the novel detection strategy mechanism is defined so that deviations from good-design principles and heuristics are quantised inform of metrics-based rules. Using detection strategies an engineer can directly localize classes or methods affected by a particular design flaw (e.g. God Class), rather than having to infer the real design problem from a large set of abnormal metric values. In order to reach the ultimate goal of bridging the gap between qualitative and quantitative statements about design, the dissertation proposes a novel type of quality model, called factor-strategy. In contrast to traditional quality models that express the goodness of design in terms of a set of metrics, this novel model relates explicitly the quality of a design to its conformance with a set of essential principles, rules and heuristics, which are quantified using detection strategies.},
	urldate = {2024-02-28},
	booktitle = {21st {IEEE} {International} {Conference} on {Software} {Maintenance} ({ICSM}'05)},
	author = {Marinescu, R.},
	month = sep,
	year = {2005},
	note = {ISSN: 1063-6773},
	keywords = {Software maintenance, Computer industry, Design engineering, Humans, Object oriented modeling, Process design, Software design, Software measurement, Software quality, Software systems},
	pages = {701--704},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Student\\Zotero\\storage\\CCERELYI\\1510177.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\IUAF2JJR\\Marinescu - 2005 - Measurement and quality in object-oriented design.pdf:application/pdf},
}

@inproceedings{vaucher_tracking_2009,
	title = {Tracking {Design} {Smells}: {Lessons} from a {Study} of {God} {Classes}},
	shorttitle = {Tracking {Design} {Smells}},
	url = {https://ieeexplore.ieee.org/abstract/document/5328806},
	doi = {10.1109/WCRE.2009.23},
	abstract = {"God class" is a term used to describe a certain type of large classes which "know too much or do too much". Often a God class (GC) is created by accident as functionalities are incrementally added to a central class over the course of its evolution. GCs are generally thought to be examples of bad code that should be detected and removed to ensure software quality. However, in some cases, a GC is created by design as the best solution to a particular problem because, for example, the problem is not easily decomposable or strong requirements on efficiency exist. In this paper, we study in two open-source systems the "life cycle" of GCs: how they arise, how prevalent they are, and whether they remain or they are removed as the systems evolve over time, through a number of versions. We show how to detect the degree of "godliness" of classes automatically. Then, we show that by identifying the evolution of "godliness", we can distinguish between those classes that are so by design (good code) from those that occurred by accident (bad code). This methodology can guide software quality teams in their efforts to implement prevention and correction mechanisms.},
	urldate = {2024-02-28},
	booktitle = {2009 16th {Working} {Conference} on {Reverse} {Engineering}},
	author = {Vaucher, Stephane and Khomh, Foutse and Moha, Naouel and Gueheneuc, Yann-Gael},
	month = oct,
	year = {2009},
	note = {ISSN: 2375-5369},
	keywords = {Software maintenance, Software quality, Accidents, antipatterns, Bayesian methods, Design smells, empirical study, Kernel, Open source software, Pattern analysis, Personnel, Reverse engineering, Risk analysis, software evolution},
	pages = {145--154},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Student\\Zotero\\storage\\2G447WJF\\5328806.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Student\\Zotero\\storage\\59NVZV3C\\Vaucher et al. - 2009 - Tracking Design Smells Lessons from a Study of Go.pdf:application/pdf},
}

@inproceedings{leung_insights_1989,
	address = {Miami, FL, USA},
	title = {Insights into regression testing (software testing)},
	isbn = {978-0-8186-1965-6},
	url = {http://ieeexplore.ieee.org/document/65194/},
	doi = {10.1109/ICSM.1989.65194},
	abstract = {Regression testing is a significant, but largely unexplored topic. In this paper, the problem of regression testing is described in general terms and its characteristics are contrasted with those of testing. Regression testing can be grouped into progressive regression testing and corrective regression testing, depending on whether the specification is changed or not, respectively. The test cases can be grouped into five classes: reusable, retestable, obsolete, new-structural and new-specification test cases. A problem facing those conducting maintenance testing is to identify the proper test classes. The notion of regression testable is introduced as a way to measure the ease of retesting. Both the program design and the test plan design may affect the regression testability of a program. The testing set, testing number, regression number, stable and workable metrics are developed to measure the program and the test plan. We propose the Retest Strategy for performing corrective regression testing. The guiding principle of Retest is to view the regression testing problem as composed of two subproblems: the test selection problem and the test plan update problem, and to structure the retesting process into two phases: the test classificationphase and the test plan update phase.},
	language = {en},
	urldate = {2024-02-29},
	booktitle = {Proceedings. {Conference} on {Software} {Maintenance} - 1989},
	publisher = {IEEE Comput. Soc. Press},
	author = {Leung, H.K.N. and White, L.},
	year = {1989},
	pages = {60--69},
	file = {Leung and White - 1989 - Insights into regression testing (software testing.pdf:C\:\\Users\\Student\\Zotero\\storage\\FQQL5R3A\\Leung and White - 1989 - Insights into regression testing (software testing.pdf:application/pdf},
}

@inproceedings{tosun_effectiveness_2018,
	address = {Gothenburg Sweden},
	title = {On the effectiveness of unit tests in test-driven development},
	isbn = {978-1-4503-6459-1},
	url = {https://dl.acm.org/doi/10.1145/3202710.3203153},
	doi = {10.1145/3202710.3203153},
	abstract = {Background: Writing unit tests is one of the primary activities in test-driven development. Yet, the existing reviews report few evidence supporting or refuting the effect of this development approach on test case quality. Lack of ability and skills of developers to produce sufficiently good test cases are also reported as limitations of applying test-driven development in industrial practice. Objective: We investigate the impact of test-driven development on the effectiveness of unit test cases compared to an incremental test last development in an industrial context. Method: We conducted an experiment in an industrial setting with 24 professionals. Professionals followed the two development approaches to implement the tasks. We measure unit test effectiveness in terms of mutation score. We also measure branch and method coverage of test suites to compare our results with the literature. Results: In terms of mutation score, we have found that the test cases written for a testdriven development task have a higher defect detection ability than test cases written for an incremental test-last development task. Subjects wrote test cases that cover more branches on a test-driven development task compared to the other task. However, test cases written for an incremental test-last development task cover more methods than those written for the second task. Conclusion: Our findings are different from previous studies conducted at academic settings. Professionals were able to perform more effective unit testing with test-driven development. Furthermore, we observe that the coverage measure preferred in academic studies reveal different aspects of a development approach. Our results need to be validated in larger industrial contexts.},
	language = {en},
	urldate = {2024-02-29},
	booktitle = {Proceedings of the 2018 {International} {Conference} on {Software} and {System} {Process}},
	publisher = {ACM},
	author = {Tosun, Ayse and Ahmed, Muzamil and Turhan, Burak and Juristo, Natalia},
	month = may,
	year = {2018},
	pages = {113--122},
	file = {Tosun et al. - 2018 - On the effectiveness of unit tests in test-driven .pdf:C\:\\Users\\Student\\Zotero\\storage\\P54L88SA\\Tosun et al. - 2018 - On the effectiveness of unit tests in test-driven .pdf:application/pdf},
}

@article{madeyski_impact_2010,
	title = {The impact of {Test}-{First} programming on branch coverage and mutation score indicator of unit tests: {An} experiment},
	volume = {52},
	issn = {0950-5849},
	shorttitle = {The impact of {Test}-{First} programming on branch coverage and mutation score indicator of unit tests},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584909001487},
	doi = {10.1016/j.infsof.2009.08.007},
	abstract = {Background
Test-First programming is regarded as one of the software development practices that can make unit tests to be more rigorous, thorough and effective in fault detection. Code coverage measures can be useful as indicators of the thoroughness of unit test suites, while mutation testing turned out to be effective at finding faults.
Objective
This paper presents an experiment in which Test-First vs. Test-Last programming practices are examined with regard to branch coverage and mutation score indicator of unit tests.
Method
Student subjects were randomly assigned to Test-First and Test-Last groups. In order to further reduce pre-existing differences among subjects, and to get a more sensitive measure of our experimental effect, multivariate analysis of covariance was performed.
Results
Multivariate tests results indicate that there is no statistically significant difference between Test-First and Test-Last practices on the combined dependent variables, i.e. branch coverage and mutation score indicator, (F(2,9)=.52, p{\textgreater}.05), even if we control for the pre-test results, the subjects’ experience, and when the subjects who showed deviations from the assigned programming technique are excluded from the analysis.
Conclusion
According to the preliminary results presented in this paper, the benefits of the Test-First practice in this specific context can be considered minor.
Limitation
It is probably the first-ever experimental evaluation of the impact of Test-First programming on mutation score indicator of unit tests and further experimentation is needed to establish evidence.},
	number = {2},
	urldate = {2024-02-29},
	journal = {Information and Software Technology},
	author = {Madeyski, Lech},
	month = feb,
	year = {2010},
	keywords = {Empirical study, Test-driven development, Test-First programming, Unit tests},
	pages = {169--184},
	file = {ScienceDirect Snapshot:C\:\\Users\\Student\\Zotero\\storage\\NI8IUNSG\\S0950584909001487.html:text/html},
}

@incollection{meyer_is_2012,
	address = {Berlin, Heidelberg},
	title = {Is {Branch} {Coverage} a {Good} {Measure} of {Testing} {Effectiveness}?},
	volume = {7007},
	isbn = {978-3-642-25230-3 978-3-642-25231-0},
	url = {http://link.springer.com/10.1007/978-3-642-25231-0_5},
	abstract = {Most approaches to testing use branch coverage to decide on the quality of a given test suite. The intuition is that covering branches relates directly to uncovering faults. The empirical study reported here applied random testing to 14 Eiffel classes for a total of 2520 hours and recorded the number of uncovered faults and the branch coverage over time. For the tested classes, (1) random testing reaches 93\% branch coverage (2) it exercises almost the same set of branches every time, (3) it detects different faults from execution to execution, (4) during the ﬁrst 10 minutes of testing, while branch coverage increases rapidly, there is a strong correlation between branch coverage and the number of uncovered faults, (5) over 50\% of the faults are detected at a time where branch coverage hardly changes, and the correlation between branch coverage and the number of uncovered faults is weak.},
	language = {en},
	urldate = {2024-02-29},
	booktitle = {Empirical {Software} {Engineering} and {Verification}},
	publisher = {Springer Berlin Heidelberg},
	author = {Wei, Yi and Meyer, Bertrand and Oriol, Manuel},
	editor = {Meyer, Bertrand and Nordio, Martin},
	year = {2012},
	doi = {10.1007/978-3-642-25231-0_5},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {194--212},
	file = {Wei et al. - 2012 - Is Branch Coverage a Good Measure of Testing Effec.pdf:C\:\\Users\\Student\\Zotero\\storage\\PIEKWMRW\\Wei et al. - 2012 - Is Branch Coverage a Good Measure of Testing Effec.pdf:application/pdf},
}

@book{gustavsson_global_2011,
	address = {Rome},
	title = {Global food losses and food waste: extent, causes and prevention; study conducted for the {International} {Congress} {Save} {Food}! at {Interpack} 2011, [16 - 17 {May}], {Düsseldorf}, {Germany}},
	isbn = {978-92-5-107205-9},
	shorttitle = {Global food losses and food waste},
	abstract = {Literaturverz. S. 16 - 22},
	language = {en},
	publisher = {Food and Agriculture Organization of the United Nations},
	author = {Cederberg, Christel and Sonesson, Ulf},
	editor = {Gustavsson, Jenny},
	year = {2011},
	note = {Meeting Name: International Congress Save Food!},
	file = {Cederberg and Sonesson - 2011 - Global food losses and food waste extent, causes .pdf:C\:\\Users\\Student\\Zotero\\storage\\2Z49VPYZ\\mb060e00.pdf:application/pdf},
}

@article{stefan_avoiding_2013,
	title = {Avoiding food waste by {Romanian} consumers: {The} importance of planning and shopping routines},
	volume = {28},
	issn = {0950-3293},
	shorttitle = {Avoiding food waste by {Romanian} consumers},
	url = {https://www.sciencedirect.com/science/article/pii/S0950329312002066},
	doi = {10.1016/j.foodqual.2012.11.001},
	abstract = {Food waste is generated in immense amounts across the food life cycle, imposing serious environmental, social and economic consequences. Although consumers are the single biggest contributor to this volume, little is known about the drivers of food waste in households. This exploratory study aims to investigate the role of food choices and other food-related activities in producing food waste. A survey of 244 Romanian consumers examined the influence of intentions not to waste food, planning and shopping routines, as well as moral attitudes and lack of concern towards wasting food, a subjective norm of disapproval towards food waste, and perceived behavioural control on consumers’ self-reported food waste. Results show that consumers’ planning and shopping routines are important predictors of food waste. Planning and shopping routines are determined by moral attitudes towards food waste and perceived behavioural control. This implies that in order to change consumers’ food waste behaviour, efforts should be directed towards providing consumers with skills and tools to deal with their food-related activities.},
	number = {1},
	urldate = {2024-02-29},
	journal = {Food Quality and Preference},
	author = {Stefan, Violeta and van Herpen, Erica and Tudoran, Ana Alina and Lähteenmäki, Liisa},
	month = apr,
	year = {2013},
	keywords = {Consumer behaviour, Food, Guilt, Shopping, Waste},
	pages = {375--381},
	file = {ScienceDirect Snapshot:C\:\\Users\\Student\\Zotero\\storage\\RUXJ5DMI\\S0950329312002066.html:text/html},
}

@article{scherhaufer_environmental_2018,
	title = {Environmental impacts of food waste in {Europe}},
	volume = {77},
	issn = {0956-053X},
	url = {https://www.sciencedirect.com/science/article/pii/S0956053X18302617},
	doi = {10.1016/j.wasman.2018.04.038},
	abstract = {Approximately 88 Million tonnes (Mt) of food is wasted in the European Union each year and the environmental impacts of these losses throughout the food supply chain are widely recognised. This study illustrates the impacts of food waste in relation to the total food utilised, including the impact from food waste management based on available data at the European level. The impacts are calculated for the Global Warming Potential, the Acidification Potential and the Eutrophication Potential using a bottom-up approach using more than 134 existing LCA studies on nine representative products (apple, tomato, potato, bread, milk, beef, pork, chicken, white fish). Results show that 186 Mt CO2-eq, 1.7 Mt SO2-eq. and 0.7 Mt PO4-eq can be attributed to food waste in Europe. This is 15 to 16\% of the total impact of the entire food supply chain. In general, the study confirmed that most of the environmental impacts are derived from the primary production step of the chain. That is why animal-containing food shows most of the food waste related impacts when it is extrapolated to total food waste even if cereals are higher in mass. Nearly three quarters of all food waste-related impacts for Global Warming originate from greenhouse gas emissions during the production step. Emissions by food processing activities contribute 6\%, retail and distribution 7\%, food consumption, 8\% and food disposal, 6\% to food waste related impacts. Even though the results are subject to certain data and scenario uncertainties, the study serves as a baseline assessment, based on current food waste data, and can be expanded as more knowledge on the type and amount of food waste becomes available. Nevertheless, the importance of food waste prevention is underlined by the results of this study, as most of the impacts originate from the production step. Through food waste prevention, those impacts can be avoided as less food needs to be produced.},
	urldate = {2024-02-29},
	journal = {Waste Management},
	author = {Scherhaufer, Silvia and Moates, Graham and Hartikainen, Hanna and Waldron, Keith and Obersteiner, Gudrun},
	month = jul,
	year = {2018},
	keywords = {Food waste, Bottom-up approach, Environmental impacts, Life cycle assessment},
	pages = {98--113},
	file = {ScienceDirect Snapshot:C\:\\Users\\Student\\Zotero\\storage\\HGJIAUP4\\S0956053X18302617.html:text/html},
}

@book{stenmarck_estimates_2016,
	title = {Estimates of {European} food waste levels},
	publisher = {IVL Swedish Environmental Research Institute},
	author = {Stenmarck, Âsa and Jensen, Carl and Quested, Tom and Moates, Graham and Buksti, Michael and Cseh, Balázs and Juul, Selina and Parry, Andrew and Politano, Alessandro and Redlingshofer, Barbara and {others}},
	year = {2016},
}

@inproceedings{wang_substructure_2008,
	address = {Beijing China},
	title = {Substructure similarity measurement in chinese recipes},
	isbn = {978-1-60558-085-2},
	url = {https://dl.acm.org/doi/10.1145/1367497.1367629},
	doi = {10.1145/1367497.1367629},
	abstract = {Improving the precision of information retrieval has been a challenging issue on Chinese Web. As exemplified by Chinese recipes on the Web, it is not easy/natural for people to use keywords (e.g. recipe names) to search recipes, since the names can be literally so abstract that they do not bear much, if any, information on the underlying ingredients or cooking methods. In this paper, we investigate the underlying features of Chinese recipes, and based on workflow-like cooking procedures, we model recipes as graphs. We further propose a novel similarity measurement based on the frequent patterns, and devise an effective filtering algorithm to prune unrelated data so as to support efficient on-line searching. Benefiting from the characteristics of graphs, frequent common patterns can be mined from a cooking graph database. So in our prototype system called RecipeView, we extend the subgraph mining algorithm FSG to cooking graphs and combine it with our proposed similarity measurement, resulting in an approach that well caters for specific users’ needs. Our initial experimental studies show that the filtering algorithm can efficiently prune unrelated cooking graphs without affecting the retrieval performance and the similarity measurement gets a relatively higher precision/recall against its counterparts.},
	language = {en},
	urldate = {2024-03-06},
	booktitle = {Proceedings of the 17th international conference on {World} {Wide} {Web}},
	publisher = {ACM},
	author = {Wang, Liping and Li, Qing and Li, Na and Dong, Guozhu and Yang, Yu},
	month = apr,
	year = {2008},
	pages = {979--988},
	file = {Wang et al. - 2008 - Substructure similarity measurement in chinese rec.pdf:C\:\\Users\\Student\\Zotero\\storage\\L5AL9T4B\\Wang et al. - 2008 - Substructure similarity measurement in chinese rec.pdf:application/pdf},
}

@inproceedings{achananuparp_evaluation_2008,
	title = {The evaluation of sentence similarity measures},
	booktitle = {Data {Warehousing} and {Knowledge} {Discovery}: 10th {International} {Conference}, {DaWaK} 2008 {Turin}, {Italy}, {September} 2-5, 2008 {Proceedings} 10},
	publisher = {Springer},
	author = {Achananuparp, Palakorn and Hu, Xiaohua and Shen, Xiajiong},
	year = {2008},
	pages = {305--316},
	file = {Achananuparp et al. - 2008 - The evaluation of sentence similarity measures.pdf:C\:\\Users\\Student\\Zotero\\storage\\7UELKLTU\\Achananuparp et al. - 2008 - The evaluation of sentence similarity measures.pdf:application/pdf},
}

@article{ihajeer_comparison_2012,
	title = {Comparison on the {Effectiveness} of {Different} {Statistical} {Similarity} {Measures}},
	volume = {53},
	issn = {09758887},
	url = {http://research.ijcaonline.org/volume53/number8/pxc3882224.pdf},
	doi = {10.5120/8440-2224},
	abstract = {Document retrieval is the process of matching of some sated user query against a set of free-text records (documents), its one major technique for organizing and managing information. This project was concerned with studying which of the different statistical measures in IR have the most effectiveness on document retrieval using a unified set of documents. The results show that the Cosine Similarity Measure is the best of other seven measures (Inner Product, Dice Coefficient, Jaccard Coefficient, Inclusion Similarity Coefficient, Overlap Coefficient Measure, Euclidean distance Measure and Manhattan Distance Measure (City Block Distance) for both languages, with precision on Arabic collection 38\% and recall 53.2\%. On English collection, the precision is 25\% and recall 65\%.},
	language = {en},
	number = {8},
	urldate = {2024-03-07},
	journal = {International Journal of Computer Applications},
	author = {I.Hajeer, Safa\&apos;a},
	month = sep,
	year = {2012},
	pages = {14--19},
	file = {I.Hajeer - 2012 - Comparison on the Effectiveness of Different Stati.pdf:C\:\\Users\\Student\\Zotero\\storage\\K3VE5BVH\\I.Hajeer - 2012 - Comparison on the Effectiveness of Different Stati.pdf:application/pdf},
}
